---

#------------------------------------------------------------------------------
# YAML Aliases to simplify maintenance

anchorLinks:
  - thresholds: &thresholds-high
      - {color: "green", level: 100}
      - {color: "orange", level: 400}
      - {color: "red", level: 700}
  - thresholds: &thresholds-bes-override
      - {color: "green", level: 200}
      - {color: "orange", level: 400}
      - {color: "red", level: 600}

#------------------------------------------------------------------------------
# Panel Config

cellIdPreamble: "cell-"
gradientMode: "hue"
cells: 

  box:
    dataRef: "test-data-large-sin"
    label:
      separator: "replace"
      units: "ops"
    fillColor:
      thresholds: *thresholds-high
    bespoke:
      namespace: "box"
      formulas:
        - "scale = string(0.5 + max(0.0, min(1.0, data['test-data-large-sin'] / 1000)))"
      drives:
        - elementName: "rect"
          attribsGet:
            boxOriginX: "x"
            boxOriginY: "y"
        - elementName: "g"
          elementPosition: 1
          attribsSet:
            transform: "concat('scale(', scale, ')')"
            'transform-origin': "concat(boxOriginX, ' ', boxOriginY)"
  box_variable:
    bespokeDataRef: "myGrafanaVariable"
    label:
      separator: "replace"
    bespoke:
      formulas:
        - "myGrafanaVariable = concat(utils.variablesReplace('${myVar} '), string(boxOriginX))"
      drives:
        - elementName: "rect"
          attribsGet:
            boxOriginX: "x"

  #----------------------------------------------------------------------------
  clock_face:
    bespoke:
      namespace: "clock"
      drives:
        # Capture the clock origin
        - elementName: "ellipse"
          attribsGet:
            clockOriginX: "cx"
            clockOriginY: "cy"

  clock_long_hand:
    dataRef: "test-data-large-sin"
    strokeColor:
      thresholds: *thresholds-high
    bespoke:
      namespace: "clock"
      dataRefs:
        - "test-data-large-cos"
      constants:
        handDRef: "test-data-large-cos"
      formulas: &clockFormulas
        - "longHandAngle = string(data[handDRef])"
        - "shortHandAngle = string(data[handDRef] / 12)"
      drives: &clockLongHandDrives
        # Note color thresholds are using large-sin but the rotation is using the large-cos dataRef
        - elementName: "path"
          attribsSet:
            transform:  "concat('rotate(', longHandAngle, ' ', clockOriginX, ' ', clockOriginY, ')')"

  clock_short_hand:
    dataRef: "test-data-large-cos"
    strokeColor:
      thresholds: *thresholds-high
    bespoke:
      namespace: "clock"
      drives: &clockShortHandDrives
        - elementName: "path"
          attribsSet:
            transform: "concat('rotate(', shortHandAngle, ' ', clockOriginX, ' ', clockOriginY, ')')"

  clock_face_2:
    bespoke:
      namespace: "clock2"
      drives:
        # Capture the clock origin
        - elementName: "ellipse"
          attribsGet:
            clockOriginX: "cx"
            clockOriginY: "cy"

  clock_long_hand_2:
    dataRef: "test-data-large-sin"
    strokeColor:
      thresholds: *thresholds-high
    bespoke:
      namespace: "clock2"
      constants:
        handDRef: "test-data-large-sin"
      formulas: *clockFormulas
      drives: *clockLongHandDrives

  clock_short_hand_2:
    dataRef: "test-data-large-sin"
    strokeColor:
      thresholds: *thresholds-high
    bespoke:
      namespace: "clock2"
      drives:  *clockShortHandDrives

  #----------------------------------------------------------------------------
  connector_double_arrow:
    dataRef: "test-data-large-sin"
    bespoke:
      drives:
        # Three path elements exist. The first is the line and the 2nd, 3rd are the arrow heads. Drive the
        # arrow head visibility off of data so only one is visible at a time.
        - elementName: "path"
          elementPosition: 2
          attribsSet:
            visibility: "data['test-data-large-sin'] >= 500 ? 'hidden' : 'visible'"
        - elementName: "path"
          elementPosition: 3
          attribsSet:
            visibility: "data['test-data-large-sin'] < 500 ? 'hidden' : 'visible'"
  range_ring:
    dataRef: "test-data-large-cos"
    bespokeDataRef: "ringBoundary"
    label:
      separator: "replace"
      units: "ops"
    labelColor:
      thresholds: *thresholds-high
    bespoke:
      dataRefs:
        - "test-data-large-sin"
      formulas:
        - "scale = string(0.5 + max(0.0, min(1.0, data['test-data-large-sin'] / 1000)))"
        - "ringBoundary = round(data['test-data-large-sin'] / 200) * 200"
        #- "utils.log('log scale and data to console:', scale, ringBoundary, data)"
      drives:
        # Capture the range-ring origin on the inner 'ellipse' element
        - elementName: "ellipse"
          attribsGet:
            rangeRingOriginX: "cx"
            rangeRingOriginY: "cy"

        # Scale the range-ring on the outer 'g' around the ellipse origin. Scaling on the outer 'g' ensures
        # everything within such as the label is kept coherently positioned.
        - elementName: "g"
          elementPosition: 1
          attribsSet:
            transform: "concat('scale(', scale, ' ', scale, ')')"
            'transform-origin': "concat(rangeRingOriginX, ' ', rangeRingOriginY)"

  prop_center:
    bespoke:
      namespace: "propeller"
      drives:
        - elementName: "ellipse"
          attribsGet:
            propOriginX: "cx"
            propOriginY: "cy"
  prop_blade_1:
    dataRef: "test-data-large-cos"
    fillColor:
      thresholds: *thresholds-high
    fillLevel:
      thresholdLwrFillPercent: 0
      thresholdUprFillPercent: 100
      thresholdLwrValue: 0
      thresholdUprValue: 1000
      fillDirection: 'bottomToTop'
    bespoke:
      namespace: "propeller"
      drives:
        # Rotate the outer 'g' using transform. This ensures the inner clip-path setup for the fillLevel drive remains
        # coherently positioned as the blade rotates.
        - elementName: "g"
          elementPosition: 1
          attribsSet:
            transform: &propBladeTransform "concat('rotate(', string(data['test-data-large-cos']), ' ', propOriginX, ' ', propOriginY, ')')"
  prop_blade_2:
    dataRef: "test-data-large-cos"
    fillColor:
      thresholds: *thresholds-high
    fillLevel:
      thresholdLwrFillPercent: 0
      thresholdUprFillPercent: 100
      thresholdLwrValue: 0
      thresholdUprValue: 1000
      fillDirection: 'topToBottom'
    bespoke:
      namespace: "propeller"
      drives:
        - elementName: "g"
          elementPosition: 1
          attribsSet:
            transform: *propBladeTransform
  #----------------------------------------------------------------------------
  # This section drives the first box column using a bespokeDatRef overriden
  # at the drive level (i.e. label, labelColor, strokeColor, etc.)
  bes_override_label_color:
    dataRef: "test-data-large-cos"
    label:
      bespokeDataRef: "ringBoundary"
      separator: "replace"
      units: "ops"
    labelColor:
      bespokeDataRef: "ringBoundary"
      thresholds: *thresholds-bes-override
    bespoke:
      namespace: "range_ring"
  bes_override_stroke_color:
    dataRef: "test-data-large-cos"
    label:
      bespokeDataRef: "ringBoundary"
      separator: "replace"
      units: "ops"
      thresholds: *thresholds-bes-override
    strokeColor:
      bespokeDataRef: "ringBoundary"
      thresholds: *thresholds-bes-override
    bespoke:
      namespace: "range_ring"
  bes_override_fill_color:
    dataRef: "test-data-large-cos"
    label:
      bespokeDataRef: "ringBoundary"
      separator: "replace"
      units: "ops"
      thresholds: *thresholds-bes-override
    fillColor:
      bespokeDataRef: "ringBoundary"
      thresholds: *thresholds-bes-override
    bespoke:
      namespace: "range_ring"
  bes_override_fill_level:
    dataRef: "test-data-large-cos"
    bespoke:
      namespace: "range_ring"
    label:
      bespokeDataRef: "ringBoundary"
      separator: "replace"
      units: "ops"
      thresholds: *thresholds-bes-override
    fillColor:
      bespokeDataRef: "ringBoundary"
      thresholds: *thresholds-bes-override
    fillLevel:
      bespokeDataRef: "ringBoundary"
      thresholdLwrFillPercent: 0
      thresholdUprFillPercent: 100
      thresholdLwrValue: 200
      thresholdUprValue: 800
  bes_override_flow:
    dataRef: "test-data-large-cos"
    bespoke:
      namespace: "range_ring"
    flowAnimation:
      bespokeDataRef: "ringBoundary"
      thresholdOffValue: 200
      thresholdLwrValue: 200
      thresholdLwrDurationSecs: 1
      thresholdUprValue: 800
      thresholdUprDurationSecs: 0.1
  #----------------------------------------------------------------------------
  # This section drives the second box column using a bespokeDatRef defined at
  # the cell level
  bes_override_cell_label_color:
    bespokeDataRef: "ringBoundary"
    bespoke:
      namespace: "range_ring"
    label:
      separator: "replace"
      units: "ops"
    labelColor:
      thresholds: *thresholds-bes-override
  bes_override_cell_stroke_color:
    bespokeDataRef: "ringBoundary"
    bespoke:
      namespace: "range_ring"
    label:
      separator: "replace"
      units: "ops"
      thresholds: *thresholds-bes-override
    strokeColor:
      thresholds: *thresholds-bes-override
  bes_override_cell_fill_color:
    bespokeDataRef: "ringBoundary"
    label:
      separator: "replace"
      units: "ops"
      thresholds: *thresholds-bes-override
    fillColor:
      thresholds: *thresholds-bes-override
    bespoke:
      namespace: "range_ring"
  bes_override_cell_fill_level:
    bespokeDataRef: "ringBoundary"
    bespoke:
      namespace: "range_ring"
    label:
      separator: "replace"
      units: "ops"
      thresholds: *thresholds-bes-override
    fillColor:
      thresholds: *thresholds-bes-override
    fillLevel:
      thresholdLwrFillPercent: 0
      thresholdUprFillPercent: 100
      thresholdLwrValue: 200
      thresholdUprValue: 800
  bes_override_cell_flow:
    bespokeDataRef: "ringBoundary"
    bespoke:
      namespace: "range_ring"
    flowAnimation:
      thresholdOffValue: 200
      thresholdLwrValue: 200
      thresholdLwrDurationSecs: 1
      thresholdUprValue: 800
      thresholdUprDurationSecs: 0.1
