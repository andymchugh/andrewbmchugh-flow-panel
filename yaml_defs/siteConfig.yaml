---

# Version 1.14.0 onwards: The zoomPanPinch yaml provides customization of the zoom-pan-pinch
# behavior. It can be defined in either panelConfig or siteConfig.
zoomPanPinch:
  # This optional term defines the array of keys that can be used to enable wheel zoom. There's
  # a clash of interest between panel zoom and dashboard scrolling which is easy to avoid with small
  # SVGs, but becomes more problematic when the SVG is large and covers a lot of the screen. By
  # requiring a combo such as ALT+Scroll this clash can be avoided. 
  wheelActivationKeys: ["Alt"]

# These scalars provide a way for grafana variable settings to adjust the threshold
# limits. They are explained in the panelConfig documentation. These scalar
# rules across the two files are additive. As in the panelConfig rules are added first, then
# the siteConfig rules are postpended to the variable rule arrays. As such panelConfig rules
# get the first opportunity to match.
variableThresholdScalars:
  client:
    - {variableValuePattern: ".*busy.*", thresholdScalar: 2, cellIdPatternScope: [".*box.*"]}
  environment:
    - {variableValuePattern: "dev", thresholdScalar: 0.2, cellIdPatternScope: ["inbox_depth"]}

# Version 1.14.0 onwards: This section defines site level defaults for the link window
linkWindow:
  # Default for '<cell>.link.sameTab'.
  sameTab: true

# Version 1.14.0 onwards: Link variables will be substituted in urls prior to passing through
# grafana variable substitution. Variables should be defined in the same format as grafana variables.
# i.e. ${urlBasePlugin}. These variables can be defined in siteConfig or panelConfig.
# Alongside these bespoke variables there are two reserved variables driven from the cell yaml of:
# ${cell.name}
# ${cell.dataRef}
# Substitution order is: reserved-vars -> siteConfig-vars -> panelConfig-vars -> grafana-vars
linkVariables:
  urlBasePlugin: "https://github.com/andymchugh/andrewbmchugh-flow-panel/blob/main/"
  urlBaseGrafana: "https://app.diagrams.net/"

# These are referenced from panelConfig via the 'linkRef' field.
# The fields inside a link are explained in the panelConfig documentation.
# i.e. In panelConfig you see: linkRef: "drawio"
links:
  drawio:
    url: "https://app.diagrams.net/?p=svgdata"
    params: "none"
  grafana:
    url: "https://grafana.com/products/cloud/"
    params: "none"

# These are referenced from panelConfig via the 'thresholds->color' field.
# Every color value is passed via these lookup before finalizing the value.
# As such names can be used herer for defining your system theme allowing
# you to change it in a single place. The values you assign to names can be
# any of the value forms explained in the panelConfig documentation.
colors:
  red: "#FF0000"
  amber: "#FFBF00"
  green: "#00AA00"

# These are refenced from panelConfig via the 'thresholdsRef' field.
# i.e. in panelConfig you see: thresholdsRef: "queuecount".
# The fields inside are explained in the panelConfig documentation.
thresholds:
  queuecount:
    - {color: "green", level: 10}
    - {color: "amber", level: 30}
    - {color: "red", level: 60}
  queuedepth:
    - {color: "green", level: 200}
    - {color: "amber", level: 300}
    - {color: "red", level: 1500}

# Version 1.14.0 onwards: These are refenced from panelConfig via the 'thresholdPatternsRef'
# field. i.e. in panelConfig you see: thresholdPatternsRef: "queuecount".
# The fields inside are explained in the panelConfig documentation.
thresholdPatterns:
  queuecount:
    - {color: "green", pattern: '.*INFO.*'}
    - {color: "amber", pattern: '.*WARNING.*'}
    - {color: "red", pattern: '.*ERROR.*'}
    - {color: "gray", pattern: '.*'}
  queuedepth:
    - {color: "green", level: 200}
    - {color: "amber", level: 300}
    - {color: "red", level: 1500}
    - {color: "gray", pattern: '.*'}

# Version 1.11.0 onwards: These are refenced from panelConfig via the 'valueMappingsRef' field.
# i.e. in panelConfig you see: valueMappingsRef: "dbTrans".
# The fields inside are explained in the panelConfig documentation.
valueMappings:
  dbTrans:
    - {valueMax: 300, text: "low"}
    - {valueMin: 300, valueMax: 600, text: "medium"}
    - {valueMin: 600, text: "high"}
  bypassValve:
    - {value: 0, text: "auto"}
    - {value: 1, text: "open"}
    - {value: 2, text: "closed"}
